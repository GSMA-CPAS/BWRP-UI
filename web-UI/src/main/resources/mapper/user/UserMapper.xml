<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    @SQL File Name : UserMapper.xml
    @Description : login process queries
-->
<mapper namespace="com.kt.blink.biz.user.mapper.UserMapper"> 

    <!-- inquiry user infomation -->
    <select id="findByUsername" resultType="User">
        /*UserMapper.findByUsername*/
        SELECT
            tui.user_id AS username,
            tui.first_nm AS firstname,
            concat(tui.first_nm, ' ', tui.last_nm) as fullname, 
            tui.last_nm AS lastname,
            CASE 
                WHEN tui.user_role = 1 THEN 1 <!--0:USER,1:ADMIN-->
                ELSE 0
            END AS role,
            tui.user_role AS btnRole,
            tci.cmpn_nm AS company,
            tui.temp_pwd_iss_yn,
            tui.login_fail_tmscnt,
            tui.user_pwd AS password,
            tui.cmpn_id
        FROM tb_user_info tui INNER JOIN tb_cmpn_info tci
        ON tci.cmpn_id = tui.cmpn_id
        WHERE tui.user_id = #{username}
    </select>
    
    
    <!-- inquiry user login attempt counts -->
    <select id="findUserLoginAttemps" resultType="Integer">
        /*UserMapper.findUserLoginAttemps*/
        SELECT
            login_fail_tmscnt
        FROM tb_user_info
        WHERE user_id = #{username}
    </select>
    
    
    <!-- check if user login passwd is reset -->
    <select id="findUserResetPasswordYn" resultType="Boolean">
        /*UserMapper.findUserResetPasswordYn*/
        SELECT
            temp_pwd_iss_yn
        FROM tb_user_info
        WHERE user_id = #{username}
    </select>
    
    
    <!-- change user passwd -->
    <update id="changeUserCredential">
        /*UserMapper.changeUserCredential*/
        UPDATE tb_user_info 
        <set> 
            user_pwd = #{user.password},
            temp_pwd_iss_yn = false,
            login_fail_tmscnt = 0,
            sys_trtr_id = #{user.username},
            sys_svc_id = #{user.sysSvcId},
            sys_recd_chg_dt = NOW()
        </set> 
        WHERE user_id = #{user.username}
    </update>
    
    
    <!-- check if passwd is reset  -->
    <select id="findCredentialReset" resultType="Boolean">
        /*UserMapper.findCredentialReset*/
        SELECT
            temp_pwd_iss_yn
        FROM tb_user_info
        WHERE user_id = #{username}
    </select>
    
    
    <!-- reset user login attempt count -->
    <update id="resetUserLoginAttempts">
        /*UserMapper.resetUserLoginAttempts*/
        UPDATE tb_user_info 
        SET login_fail_tmscnt = 0
        WHERE user_id = #{username}
    </update>
    
    
    <!-- increase counts of user login attempts -->
    <update id="increaseUserLoginAttempts">
        /*UserMapper.increaseUserLoginAttempts*/
        UPDATE tb_user_info 
        SET login_fail_tmscnt = #{attempts}
        WHERE user_id = #{username}
    </update>
    
    
    <!-- Reset to the default password when user login attempt errors occur 5 times -->
    <update id="resetUserCredentialToDefault">
        /*UserMapper.resetUserCredentialToDefault*/
        UPDATE tb_user_info 
        SET
            temp_pwd_iss_yn = true,
            user_pwd = #{credential}
        WHERE user_id = #{username}
    </update>
    
    
    <!-- create user login access history -->
    <insert id="saveUserAccessLog" parameterType="UserAccessHist">
        /*UserMapper.saveUserAccessLog*/
        INSERT INTO tb_users_access_hist
        (
            username,
            success_yn,
            resaon,
            last_accessed
        ) 
        VALUES 
        (   
            #{username},
            #{successYn},
            #{reason},
            NOW()
        )
    </insert>
    
</mapper>
